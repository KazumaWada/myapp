# version: 2

# orbs:
#   ruby: circleci/ruby@1.1.0
#   node: circleci/node@2

# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/ruby:2.6.6-node-browsers
#         environment:
#           RAILS_ENV: test
#           DB_HOST: 127.0.0.1
#           DB_USERNAME: ci-test
#           DB_PASSWORD: password

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       - image: circleci/mysql:8.0

#     working_directory: ~/myapp

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "Gemfile.lock" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run:
#           name: install dependencies
#           command: |
#             bundle install --jobs=4 --retry=3 --path vendor/bundle

#       - save_cache:
#           paths:
#             - ./vendor/bundle
#           key: v1-dependencies-{{ checksum "Gemfile.lock" }}

#       - run:
#           name: Wait for DB
#           command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

#       # Database setup
#       # - run: docker-compose run app
#       - run: bundle exec rails db:create
#       - run: bundle exec rails db:migrate
#       - run: bundle exec rails db:seed
#       - run: bundle exec rails db:schema:load

#       # run tests!
#       - run:
#           name: run tests
#           command: |
#             mkdir /tmp/test-results
#             TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

#             bundle exec rspec --format progress \
#                             --format RspecJunitFormatter \
#                             --out /tmp/test-results/rspec.xml \
#                             --format progress \
#                             $TEST_FILES

#       # collect reports
#       - store_test_results:
#           path: /tmp/test-results
#       - store_artifacts:
#           path: /tmp/test-results
#           destination: test-results

#       # run rubocop
#       - run:
#           name: run rubocop
#           command: bundle exec rubocop

version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  node: circleci/node@2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
    steps:
      - checkout
      - ruby/install-deps
      # Store bundle cache
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
  test:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
      - image: circleci/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: test-user
          MYSQL_PASSWORD: password
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      DBUSER: test-user
      DBPASSWORD: password
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 120s
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      # Run rspec in parallel
      - ruby/rspec-test
      - ruby/rubocop-check

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
